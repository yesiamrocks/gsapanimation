{"version":3,"file":"gsapanimation.js","sources":["../src/animations/FadeIn.js","../src/animations/FadeInLeft.js","../src/animations/FadeInRight.js","../tools/gsap-animation-map.js","../tools/gsap-letteranimation.js","../src/gsapanimation.js"],"sourcesContent":["/**\r\n * Fade-in animation using gsap.fromTo() if both from/to are provided,\r\n * or fallback from { opacity: 0 } to defaultTo.\r\n *\r\n * @param {HTMLElement | Element[] | NodeList} el - Target element(s)\r\n * @param {Object} [options={}] - GSAP animation options\r\n */\r\nexport function animateFadeIn(el, options = {}) {\r\n    const from = options.from || null;\r\n    const to = options.to || null;\r\n\r\n    const defaultFrom = { opacity: 0 };\r\n    const defaultTo = {\r\n        opacity: 1,\r\n        duration: 1,\r\n        ease: 'power1.out',\r\n        stagger: 0.05,\r\n    };\r\n\r\n    // Helper to clean up after animation\r\n    const cleanup = () => {\r\n        if (el instanceof NodeList || Array.isArray(el)) {\r\n            removeLetterAnimationHints(el);\r\n        } else {\r\n            el.style.willChange = 'auto';\r\n            el.style.backfaceVisibility = '';\r\n            el.style.transformStyle = '';\r\n        }\r\n    };\r\n\r\n    if (from && to) {\r\n        gsap.fromTo(el, from, {\r\n            ...defaultTo,\r\n            ...to,\r\n            onComplete: () => {\r\n                cleanup();\r\n                to?.onComplete?.(); // if user passed onComplete\r\n            },\r\n        });\r\n    } else if (!from && (to || Object.keys(options).length > 0)) {\r\n        const finalTo = {\r\n            ...defaultTo,\r\n            ...(to || options),\r\n            onComplete: () => {\r\n                cleanup();\r\n                options?.onComplete?.();\r\n            },\r\n        };\r\n\r\n        if (\r\n            typeof options.from === 'undefined' &&\r\n            typeof options.fromOpacity === 'undefined' &&\r\n            typeof options.opacity === 'undefined'\r\n        ) {\r\n            gsap.set(el, { opacity: 0 });\r\n        } else if (options.fromOpacity !== undefined) {\r\n            gsap.set(el, { opacity: options.fromOpacity });\r\n        }\r\n\r\n        gsap.to(el, finalTo);\r\n    } else {\r\n        gsap.fromTo(el, defaultFrom, {\r\n            ...defaultTo,\r\n            onComplete: () => {\r\n                cleanup();\r\n            },\r\n        });\r\n    }\r\n\r\n    console.log('[cssanimation.io] ✅ animateFadeIn applied:', el);\r\n}\r\n","/**\r\n * GSAP version of `fadeInLeft` animation.\r\n *\r\n * @param {HTMLElement | Element[] | NodeList} el - Target element(s)\r\n * @param {Object} [options={}] - Optional GSAP overrides (from, to, etc.)\r\n */\r\nexport function animateFadeInLeft(el, options = {}) {\r\n    const from = options.from || null;\r\n    const to = options.to || null;\r\n\r\n    const defaultFrom = {\r\n        opacity: 0,\r\n        x: '-100%',\r\n    };\r\n\r\n    const defaultTo = {\r\n        opacity: 1,\r\n        x: 0,\r\n        duration: 0.8,\r\n        ease: 'power3.out',\r\n        stagger: 0.05,\r\n    };\r\n\r\n    // Cleanup function\r\n    const cleanup = () => {\r\n        if (el instanceof NodeList || Array.isArray(el)) {\r\n            removeLetterAnimationHints(el);\r\n        } else {\r\n            el.style.willChange = 'auto';\r\n            el.style.backfaceVisibility = '';\r\n            el.style.transformStyle = '';\r\n        }\r\n    };\r\n\r\n    if (from && to) {\r\n        gsap.fromTo(el, from, {\r\n            ...defaultTo,\r\n            ...to,\r\n            onComplete: () => {\r\n                cleanup();\r\n                to?.onComplete?.();\r\n            },\r\n        });\r\n    } else if (!from && (to || Object.keys(options).length > 0)) {\r\n        const finalTo = {\r\n            ...defaultTo,\r\n            ...(to || options),\r\n            onComplete: () => {\r\n                cleanup();\r\n                options?.onComplete?.();\r\n            },\r\n        };\r\n\r\n        if (\r\n            typeof options.from === 'undefined' &&\r\n            typeof options.fromOpacity === 'undefined' &&\r\n            typeof options.opacity === 'undefined'\r\n        ) {\r\n            gsap.set(el, { ...defaultFrom });\r\n        } else if (options.fromOpacity !== undefined) {\r\n            gsap.set(el, { opacity: options.fromOpacity });\r\n        }\r\n\r\n        gsap.to(el, finalTo);\r\n    } else {\r\n        gsap.fromTo(el, defaultFrom, {\r\n            ...defaultTo,\r\n            onComplete: cleanup,\r\n        });\r\n    }\r\n\r\n    console.log('[cssanimation.io] ✅ animateFadeInLeft applied:', el);\r\n}\r\n","/**\r\n * GSAP version of `fadeInRight` animation.\r\n * Equivalent to:\r\n *   from { opacity: 0; transform: translateX(100%) }\r\n *   to   { opacity: 1; }\r\n *\r\n * @param {HTMLElement | Element[] | NodeList} el - Target element(s)\r\n * @param {Object} [options={}] - Optional GSAP overrides (from, to, etc.)\r\n */\r\nexport function animateFadeInRight(el, options = {}) {\r\n    const from = options.from || null;\r\n    const to = options.to || null;\r\n\r\n    const defaultFrom = {\r\n        opacity: 0,\r\n        x: '100%',\r\n    };\r\n\r\n    const defaultTo = {\r\n        opacity: 1,\r\n        x: 0,\r\n        duration: 0.8,\r\n        ease: 'power3.out',\r\n        stagger: 0.05,\r\n    };\r\n\r\n    const cleanup = () => {\r\n        if (el instanceof NodeList || Array.isArray(el)) {\r\n            removeLetterAnimationHints(el);\r\n        } else {\r\n            el.style.willChange = 'auto';\r\n            el.style.backfaceVisibility = '';\r\n            el.style.transformStyle = '';\r\n        }\r\n    };\r\n\r\n    if (from && to) {\r\n        gsap.fromTo(el, from, {\r\n            ...defaultTo,\r\n            ...to,\r\n            onComplete: () => {\r\n                cleanup();\r\n                to?.onComplete?.();\r\n            },\r\n        });\r\n    } else if (!from && (to || Object.keys(options).length > 0)) {\r\n        const finalTo = {\r\n            ...defaultTo,\r\n            ...(to || options),\r\n            onComplete: () => {\r\n                cleanup();\r\n                options?.onComplete?.();\r\n            },\r\n        };\r\n\r\n        if (\r\n            typeof options.from === 'undefined' &&\r\n            typeof options.fromOpacity === 'undefined' &&\r\n            typeof options.opacity === 'undefined'\r\n        ) {\r\n            gsap.set(el, { ...defaultFrom });\r\n        } else if (options.fromOpacity !== undefined) {\r\n            gsap.set(el, { opacity: options.fromOpacity });\r\n        }\r\n\r\n        gsap.to(el, finalTo);\r\n    } else {\r\n        gsap.fromTo(el, defaultFrom, {\r\n            ...defaultTo,\r\n            onComplete: cleanup,\r\n        });\r\n    }\r\n\r\n    console.log('[cssanimation.io] ✅ animateFadeInRight applied:', el);\r\n}\r\n","/**\n * Auto-generated animation map from ./src/animations\n * Run this file before building: npm run generate:map\n * \n * This file maps animation names (e.g., 'bounce') to exported GSAP functions (e.g., animateBounce).\n * DO NOT EDIT MANUALLY — instead, edit animation files in /src/animations/\n */\n\nimport { animateFadeIn } from '../src/animations/FadeIn.js';\nimport { animateFadeInLeft } from '../src/animations/FadeInLeft.js';\nimport { animateFadeInRight } from '../src/animations/FadeInRight.js';\n\nexport const animationMap = {\n  'ca__gx-FadeIn': animateFadeIn,\n  'ca__gx-FadeInLeft': animateFadeInLeft,\n  'ca__gx-FadeInRight': animateFadeInRight,\n};\n","/**\r\n * Wraps each character of the element’s textContent in a span\r\n * for GSAP-based letter animations based on ca__gx-lt mode.\r\n *\r\n * Supported modes:\r\n * - ca__gx-lt=\"sequence\"\r\n * - ca__gx-lt=\"reverse\"\r\n * - ca__gx-lt=\"random\"\r\n *\r\n * @param {HTMLElement} el - Target element\r\n * @param {string} spanClass - Class to apply to each span\r\n * @returns {Element[]} - Array of span-wrapped letters in the correct animation order\r\n */\r\nexport function wrapLettersIfNeeded(el, spanClass = 'ca__gsap-letter') {\r\n    const mode = el.getAttribute('ca__gx-lt'); // sequence | reverse | random\r\n    if (!mode) return el.childNodes;\r\n\r\n    injectLetterCSS(spanClass); // inject CSS rule once\r\n\r\n    const text = el.textContent.trim();\r\n    const chars = [...text];\r\n\r\n    el.innerHTML = chars\r\n        .map((char) =>\r\n            char === ' ' ? ' ' : `<span class=\"${spanClass}\">${char}</span>`,\r\n        )\r\n        .join('');\r\n\r\n    const spans = el.querySelectorAll(`.${spanClass}`);\r\n\r\n    applyAnimationHints(spans); // apply inline GPU-friendly styles\r\n\r\n    switch (mode) {\r\n        case 'random':\r\n            return shuffleNodeList(spans);\r\n        case 'reverse':\r\n            return Array.from(spans).reverse();\r\n        default:\r\n            return Array.from(spans); // \"sequence\"\r\n    }\r\n}\r\n\r\n/**\r\n * Shuffles a NodeList and returns a shuffled array of elements\r\n */\r\nfunction shuffleNodeList(nodeList) {\r\n    const array = Array.from(nodeList);\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n    return array;\r\n}\r\n\r\n/**\r\n * Injects required layout CSS rule (only once)\r\n */\r\nfunction injectLetterCSS(spanClass) {\r\n    const styleId = '__ca__gsap_letter_style__';\r\n    if (document.getElementById(styleId)) return;\r\n\r\n    const style = document.createElement('style');\r\n    style.id = styleId;\r\n    style.textContent = `\r\n    .${spanClass} {\r\n      display: inline-block;\r\n    }\r\n  `;\r\n    document.head.appendChild(style);\r\n}\r\n\r\n/**\r\n * Apply inline animation performance styles to each span\r\n */\r\nfunction applyAnimationHints(spans) {\r\n    spans.forEach((el) => {\r\n        el.style.willChange = 'transform, opacity';\r\n        el.style.backfaceVisibility = 'hidden';\r\n        el.style.transformStyle = 'preserve-3d';\r\n    });\r\n}\r\n\r\n/**\r\n * Optional helper: cleanup styles after animation completes\r\n */\r\nexport function removeLetterAnimationHints(spans) {\r\n    spans.forEach((el) => {\r\n        el.style.willChange = 'auto';\r\n        el.style.backfaceVisibility = '';\r\n        el.style.transformStyle = '';\r\n    });\r\n}\r\n","import { animationMap } from '../tools/gsap-animation-map.js';\r\nimport { wrapLettersIfNeeded } from '../tools/gsap-letteranimation.js';\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    injectGlobalGsapAnimationStyles(); // inject for non-letter animations\r\n\r\n    const animatedElements = document.querySelectorAll('[ca-gsap]');\r\n\r\n    animatedElements.forEach((el) => {\r\n        const animationName = el.getAttribute('ca-gsap');\r\n        const animateFn = animationMap[animationName];\r\n\r\n        if (typeof animateFn !== 'function') {\r\n            console.warn(\r\n                `[cssanimation.io] ⚠️ Unknown animation: \"${animationName}\" not found in animationMap.`\r\n            );\r\n            el.style.outline = '2px dashed orange';\r\n            el.setAttribute('title', `Unknown animation: \"${animationName}\"`);\r\n            return;\r\n        }\r\n\r\n        let options = {};\r\n        const raw = el.getAttribute('ca-gsap-options');\r\n        const hasOptions = Boolean(raw);\r\n\r\n        if (hasOptions) {\r\n            try {\r\n                options = JSON.parse(raw);\r\n            } catch (err) {\r\n                console.group(\r\n                    `[cssanimation.io] ❌ Invalid JSON in ca-gsap-options`\r\n                );\r\n                console.warn(`Element:`, el);\r\n                console.warn(`→ Received: ${raw}`);\r\n                console.warn(`→ Error: ${err.message}`);\r\n                console.info(`💡 Fix the JSON format. Examples:`);\r\n                console.info(`✅ '{\"y\": 30, \"duration\": 1.5}'`);\r\n                console.groupEnd();\r\n                el.style.outline = '3px dashed red';\r\n                el.setAttribute('title', 'Invalid JSON in ca-gsap-options');\r\n                return;\r\n            }\r\n        }\r\n\r\n        const isLetter = el.hasAttribute('ca__gx-lt');\r\n        const target = isLetter\r\n            ? wrapLettersIfNeeded(el, 'ca__gsap-letter')\r\n            : el;\r\n\r\n        if (!isLetter) {\r\n            // Inject target-safe styles if not using letter animation\r\n            el.style.willChange = 'transform, opacity';\r\n            el.style.backfaceVisibility = 'hidden';\r\n            el.style.transformStyle = 'preserve-3d';\r\n        }\r\n\r\n        if (hasOptions && options.from && options.to) {\r\n            gsap.fromTo(target, options.from, options.to);\r\n        } else if (hasOptions && !options.from) {\r\n            gsap.to(target, options);\r\n        } else {\r\n            animateFn(target);\r\n        }\r\n\r\n        console.log(`[cssanimation.io] ✅ '${animationName}' applied`, el);\r\n    });\r\n});\r\n\r\n/**\r\n * Injects a general animation style block for non-letter animations\r\n * (optional — in case you want shared base styles for future control)\r\n */\r\nfunction injectGlobalGsapAnimationStyles() {\r\n    const styleId = '__ca__gsap_global_anim_style__';\r\n    if (document.getElementById(styleId)) return;\r\n\r\n    const style = document.createElement('style');\r\n    style.id = styleId;\r\n    style.textContent = `\r\n    [ca-gsap]:not([ca__gx-lt]) {\r\n      will-change: transform, opacity;\r\n      backface-visibility: hidden;\r\n      transform-style: preserve-3d;\r\n    }\r\n  `;\r\n    document.head.appendChild(style);\r\n}\r\n"],"names":["animateFadeIn","el","options","arguments","length","undefined","from","to","defaultFrom","opacity","defaultTo","duration","ease","stagger","cleanup","NodeList","Array","isArray","removeLetterAnimationHints","style","willChange","backfaceVisibility","transformStyle","gsap","fromTo","onComplete","Object","keys","finalTo","fromOpacity","set","console","log","animateFadeInLeft","x","animateFadeInRight","animationMap","wrapLettersIfNeeded","spanClass","mode","getAttribute","childNodes","injectLetterCSS","text","textContent","trim","chars","innerHTML","map","char","join","spans","querySelectorAll","applyAnimationHints","shuffleNodeList","reverse","nodeList","array","i","j","Math","floor","random","styleId","document","getElementById","createElement","id","head","appendChild","forEach","addEventListener","injectGlobalGsapAnimationStyles","animatedElements","animationName","animateFn","warn","outline","setAttribute","raw","hasOptions","Boolean","JSON","parse","err","group","message","info","groupEnd","isLetter","hasAttribute","target"],"mappings":"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"}